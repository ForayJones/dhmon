#!/usr/bin/env python
import dhmon
import socket
import sys
import time

if len(sys.argv) > 5:
  print "%s: [[timestamp] [hostname] metric value] | [timestamp]" % sys.argv[0]
  sys.exit(0)

args = sys.argv[1:]
args.reverse()
timestamp = int(time.time())
my_hostname = socket.getfqdn()
hostname = my_hostname

# Only 1 arg: timestamp was specified
if len(args) == 1:
  timestamp = int(time.time())

if len(args) == 4:
    timestamp = int(args.pop())
if len(args) == 3:
    hostname = args.pop()

metrics = []
if len(args) == 2:
  metric = args.pop()
  value = args.pop()
  if len(value) == 0:
    sys.exit(0)

  value = eval(value)
  if value is None:
    sys.exit(0)
  metrics.append(dhmon.BulkMetric(timestamp=timestamp, hostname=hostname,
    metric=metric, value=value))
else:
  # Read metrics from stdin
  for line in sys.stdin:
    split = line.split('|')
    if len(split) == 3:
      hostname, metric, value = split
    else:
      hostname = my_hostname
      metric, value = split

    if len(value) == 0:
      continue
    value = eval(value)
    if value is None:
      continue
    metrics.append(dhmon.BulkMetric(timestamp=timestamp, hostname=hostname,
      metric=metric, value=value))

if not dhmon.metricbulk(metrics):
  sys.exit(1)
